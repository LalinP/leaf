#server.servlet.context-path=/api
server.port=8080
spring.docker.compose.enabled=false
#KAFKA
#spring.kafka.jaas.enabled=false
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
#Datasource
spring.datasource.name=leaf
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:postgresql://localhost:5432/leaf_db
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=leaf_user
spring.datasource.password=leaf_user_pw
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=50
#Hibernate
#ImplicitNamingStrategy governs
# how Hibernate derives a logical name from our Java class
# and property names.
# We can select from four built-in strategies, or we can create our own.
#ImplicitNamingStrategyJpaCompliantImpl. Using this strategy,
# the logical names will be the same as our Java class and property names.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.open-in-view=false
#Jackson
spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.write-date-keys-as-timestamps=false
#Liquibase
spring.liquibase.database-change-log-table= liq_changelog
spring.liquibase.database-change-log-lock-table=liq_lock
spring.liquibase.default-schema=public
spring.liquibase.change-log=/db/db-changelog-master.xml
spring.liquibase.contexts=${spring.profiles.active}
contexts=local
